<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>ICME-2022 天池</title>
      <link href="/2022/12/12/ICME-2022-%E5%A4%A9%E6%B1%A0/"/>
      <url>/2022/12/12/ICME-2022-%E5%A4%A9%E6%B1%A0/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h1 id="小样本商标检测挑战赛冠军方案-橘外人"><a href="#小样本商标检测挑战赛冠军方案-橘外人" class="headerlink" title="小样本商标检测挑战赛冠军方案 橘外人"></a>小样本商标检测挑战赛冠军方案 橘外人</h1><p>天池赛地址：<a href="https://tianchi.aliyun.com/competition/entrance/531948/forum">https://tianchi.aliyun.com/competition/entrance/531948/forum</a></p><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p><strong>模型结构</strong>：Cascade RCNN</p><p><strong>Backbone</strong>：Double ConvNeXt Base</p><p><strong>小样本</strong>：AutoAugment v2, Mixup, Copy-Paste</p><p><strong>小目标</strong>：1200-2400 高分辨率，Global Context</p><hr><h3 id="Cascade-RCNN"><a href="#Cascade-RCNN" class="headerlink" title="Cascade RCNN"></a>Cascade RCNN</h3><p><a href="https://arxiv.org/pdf/1712.00726.pdf">Cascade R-CNN: Delving into High Quality Object Detecion</a></p><h4 id="简要介绍"><a href="#简要介绍" class="headerlink" title="简要介绍"></a>简要介绍</h4><p>在目标检测中，<strong>IOU阈值</strong>被用来定义正样本（positive）与负样本（negative）</p><ol><li>如果使用<strong>较低</strong>的IOU阈值，那么会学习到大量的背景框，产生大量的噪声预测。</li><li>但是如果采用<strong>较高</strong>的阈值，这个检测器的表现往往会变得很差，两个主要的原因，第一就是随着IOU阈值的增加，正样本的数量会呈指数级的减小，因此产生过拟合。第二就是推理过程中出现于IOU的误匹配，也就是在训练优化感知器的过程中的最优IOU与输入proposal的IOU不相同，出现误匹配，这样很大程度上降低了检测精度。</li><li><strong>mismatch：</strong>detector通常在<strong>proposal</strong>（二阶段方法中RPN的输出框）自身的IOU值与detector训练的IOU阈值较为接近的时候才会有更好的结果，如果二者差异较大那么很难产生良好的检测效果</li><li>因此为了解决这个问题，多阶段（multi-stage）的Cascade RCNN横空出世。它由多个感知器构成，这些感知器通过递增的IOU阈值分级段训练。一个感知器输出一个良好的数据分布来作为输入训练下一个高质量感知器，这样对于假阳性的问题会好很多，在inference阶段使用同样的网络结构合理的提高了IOU的阈值而不会出现之前所说的mismatch问题</li></ol><h6 id="正负样本："><a href="#正负样本：" class="headerlink" title="正负样本："></a>正负样本：</h6><ul><li>在分类问题中：比如是做人脸识别，正样本就是人脸的图片，负样本是与问题场景相关，比如在教室中进行学生人脸识别，负样本就是教师的窗子、墙</li></ul><p><img src="https://images2015.cnblogs.com/blog/534700/201701/534700-20170104102908612-1260846013.jpg" alt="img1"></p><ul><li>在检测问题中：在网络中生成的框ROI一部分被选为正样本，一部分被选为负样本，另一部分被当作背景或不参与运算，不同的框架有不同的策略，大致都是根据IOU值，选取阈值范围进行判定</li></ul><h4 id="网络结构图："><a href="#网络结构图：" class="headerlink" title="网络结构图："></a>网络结构图：</h4><p><img src="C:\Users\kako\AppData\Roaming\Typora\typora-user-images\image-20221212110618714.png" alt="image-20221212110618714"></p><p>三个stage的IOU阈值分别为0.5，0.6，0.7</p><p>每个stage都采用了不同的head，不同的stage可以适应不同的分布，效果更好</p><h1 id="参考博客"><a href="#参考博客" class="headerlink" title="参考博客"></a>参考博客</h1><p><a href="https://www.cnblogs.com/rainsoul/p/6247779.html">机器学习中的正负样本 - rainsoul</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
            <tag> 目标检测 </tag>
            
            <tag> 算法复现 </tag>
            
            <tag> 天池 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DCNet算法复现过程记录</title>
      <link href="/2022/12/12/DCNet%E7%AE%97%E6%B3%95%E5%A4%8D%E7%8E%B0%E8%BF%87%E7%A8%8B%E8%AE%B0%E5%BD%95/"/>
      <url>/2022/12/12/DCNet%E7%AE%97%E6%B3%95%E5%A4%8D%E7%8E%B0%E8%BF%87%E7%A8%8B%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h1 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h1><ul><li>Pytorch&#x3D;1.1.0  cudatoolkit&#x3D;10.0 torchivision&#x3D;0.3.0</li><li>pycocotools&#x3D;&#x3D;2.0</li><li>apex&#x3D;0.1</li><li>maskrcnn-benchmark&#x3D;0.1</li><li>scikit-image&#x3D;0.19.3</li></ul><p>现在姑且是出问题了，没有GPU不知道怎么安装</p><p>先尝试使用<a href="https://blog.csdn.net/rocking_struggling/article/details/121884775">(43条消息) apex安装报错：Cuda extensions are being compiled with a version of Cuda that does not match the verson_阿委困的不能行的博客-CSDN博客</a>的方法尝试一下，就是不加那两个参数，成功安装了</p><h1 id="数据集配置"><a href="#数据集配置" class="headerlink" title="数据集配置"></a>数据集配置</h1><p>一直没搞懂这里，annotations那个我就直接用的coco_annotations_minival那个</p><p>这一步出了问题：Prepare base and few-shot datasets</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash tools/fewshot_exp/datasets/init_fs_dataset_standard.sh</span><br></pre></td></tr></table></figure><p>里面不知道voc那个数据集在文档里是什么格式</p>]]></content>
      
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
            <tag> 目标检测 </tag>
            
            <tag> 算法复现 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pix2pix使用数据增强</title>
      <link href="/2022/12/11/pix2pix%E4%BD%BF%E7%94%A8%E6%95%B0%E6%8D%AE%E5%A2%9E%E5%BC%BA/"/>
      <url>/2022/12/11/pix2pix%E4%BD%BF%E7%94%A8%E6%95%B0%E6%8D%AE%E5%A2%9E%E5%BC%BA/</url>
      
        <content type="html"><![CDATA[<h1 id="使用Pytorch实现数据增强"><a href="#使用Pytorch实现数据增强" class="headerlink" title="使用Pytorch实现数据增强"></a>使用Pytorch实现数据增强</h1>]]></content>
      
      
      
        <tags>
            
            <tag> 图像转换 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>图像生成评价指标</title>
      <link href="/2022/12/11/%E5%9B%BE%E5%83%8F%E7%94%9F%E6%88%90%E8%AF%84%E4%BB%B7%E6%8C%87%E6%A0%87/"/>
      <url>/2022/12/11/%E5%9B%BE%E5%83%8F%E7%94%9F%E6%88%90%E8%AF%84%E4%BB%B7%E6%8C%87%E6%A0%87/</url>
      
        <content type="html"><![CDATA[<h1 id="图像生成评价指标"><a href="#图像生成评价指标" class="headerlink" title="图像生成评价指标"></a>图像生成评价指标</h1><h2 id="PSNR（峰值信噪比）"><a href="#PSNR（峰值信噪比）" class="headerlink" title="PSNR（峰值信噪比）"></a>PSNR（峰值信噪比）</h2><h3 id="1-定义"><a href="#1-定义" class="headerlink" title="1.定义"></a>1.定义</h3><p>是基于对应像素点间的误差，即基于误差敏感的图像质量评价，经常出现评价结果与人主观感受不一致的情况。需要满足两张图像的<strong>size完全一样</strong>。</p><h3 id="2-公式"><a href="#2-公式" class="headerlink" title="2.公式"></a>2.公式</h3><p>$$<br>PSNR&#x3D;10<br>$$</p><h2 id="MSE（均方误差）"><a href="#MSE（均方误差）" class="headerlink" title="MSE（均方误差）"></a>MSE（均方误差）</h2><h2 id="SSIM（结构相似性指数）"><a href="#SSIM（结构相似性指数）" class="headerlink" title="SSIM（结构相似性指数）"></a>SSIM（结构相似性指数）</h2><p>结构相似性指数（structural similarity index）一种用于量化两幅图像间的结构相似性的指标。它仿照人类的视觉系统（Human Visual System,HVS）实现了结构相似性的有关理论，对图像的局部结构变化的感知敏感。SSIM从亮度、对比度以及结构量化图像的属性，用均值估计亮度，方差估计对比度，协方差估计结构相似程度。</p><p>SSIM值的范围为0至1，越大代表图像越相似。如果两张图片完全一样时，SSIM值为1。</p><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 适用于高版本的skimage</span></span><br><span class="line"><span class="keyword">from</span> skimage.metrics <span class="keyword">import</span> mean_squared_error <span class="keyword">as</span> compare_mse</span><br><span class="line"><span class="keyword">from</span> skimage.metrics <span class="keyword">import</span> peak_signal_noise_ratio <span class="keyword">as</span> compare_psnr</span><br><span class="line"><span class="keyword">from</span> skimage.metrics <span class="keyword">import</span> structural_similarity <span class="keyword">as</span> compare_ssim</span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"></span><br><span class="line">img1 = cv2.imread(<span class="string">r&#x27;E:\try_rcf_pix2pix\B_2\1.jpg&#x27;</span>)</span><br><span class="line">img2 = cv2.imread(<span class="string">r&#x27;E:\try_rcf_pix2pix\B_2\1.jpg&#x27;</span>)</span><br><span class="line"></span><br><span class="line">psnr = compare_psnr(img1, img2)</span><br><span class="line">ssim = compare_ssim(img1, img2, multichannel=<span class="literal">True</span>)  </span><br><span class="line"><span class="comment"># 对于多通道图像(RGB、HSV等)关键词multichannel要设置为True</span></span><br><span class="line">mse = compare_mse(img1, img2)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;PSNR：&#123;&#125;，SSIM：&#123;&#125;，MSE：&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(psnr, ssim, mse))</span><br></pre></td></tr></table></figure><p>参考博客：<a href="https://blog.csdn.net/m0_67357141/article/details/128104020"> 图像质量评价指标metrics：PSNR 、SSIM、LPIPS_今天也要debug的博客-CSDN博客</a></p><p><a href="https://zhuanlan.zhihu.com/p/309892873">有真实参照的图像质量的客观评估指标:SSIM、PSNR和LPIPS - 知乎 (zhihu.com)</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
            <tag> 图像转换 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
